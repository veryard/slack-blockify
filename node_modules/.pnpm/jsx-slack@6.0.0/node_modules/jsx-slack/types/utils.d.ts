export type DistributedProps<P, K extends string | number | symbol = P extends never ? never : keyof P> = P extends never ? never : P & {
    [U in Exclude<K, keyof P>]?: never;
};
type SpecialLink = '@channel' | '@everyone' | '@here' | '#C' | '@S' | '@UW';
export declare const detectSpecialLink: (href: string) => SpecialLink | undefined;
export declare const coerceToInteger: (num: number | string | undefined) => number | undefined;
export declare const coerceToString: {
    (value: string | number | bigint): string;
    (value: string | number | bigint | undefined): string | undefined;
};
export declare const intToAlpha: (num: number) => string;
export declare const intToRoman: (num: number) => string;
export {};
