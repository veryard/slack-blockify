type JSXSlackTemplateTag = (template: TemplateStringsArray, ...substitutions: any[]) => any;
/**
 * Template literal tag for rendering the JSX-compatible template into JSON.
 *
 * `jsxslack` allows using the template syntax almost the same as JSX, powered
 * by [HTM (Hyperscript Tagged Markup)](https://github.com/developit/htm).
 * You can build Block Kit JSON without setting JSX transpiler and importing
 * built-in components.
 *
 * ```javascript
 * const exampleBlocks = ({ name }) => jsxslack`
 *  <Blocks>
 *    <Section>
 *      Hello, <b>${name}</b>!
 *    </Section>
 *  </Blocks>
 * `
 * ```
 *
 * It has built-in fragments support so `<Fragment>` does not have to use even
 * if there are 2 and more elements.
 *
 * ```javascript
 * const Heading = ({ children }) => jsxslack`
 *  <Section>
 *    <b>${children}</b>
 *  </Section>
 *  <Divider />
 * `
 * ```
 *
 * And you can use user-defined custom component by following:
 *
 * ```javascript
 * jsxslack`
 *  <Blocks>
 *    <${Heading}>
 *      <i>jsx-slack custom block</i> :sunglasses:
 *    <//>
 *    <Section>Let's build your block.</Section>
 *  </Blocks>
 * `
 * ```
 *
 * Please notice to a usage of component that has a bit different syntax from
 * JSX. [Learn about HTM syntax](https://github.com/developit/htm).
 */
export declare const jsxslack: JSXSlackTemplateTag;
export {};
